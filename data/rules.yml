version: "3.1"

rules:
- rule: Say goodbye anytime the user says goodbye
  steps:
  - intent: goodbye
  - action: utter_goodbye

- rule: Say 'ボートです。' anytime the user challenges
  steps:
  - intent: bot_challenge
  - action: utter_iamabot

- rule: log utter_default in conversation log
  steps:
  - action: utter_default
  - action: log_conversation_bot

# simple fallback:
- rule: Single stage fallback
  steps:
  - intent: nlu_fallback
  - action: action_default_ask_affirmation

# User says "I don't know"
- rule: Send user inform_idk to fallback
  steps:
  - intent: inform_idk
  - action: action_default_ask_affirmation

# Fallback to ensure bot understands recipient of email
# - rule: set recipient slot
#  steps:
#  - intent: inform_recipient
#  - action: action_default_ask_affirmation

# Fallback to ensure bot understands email
# - rule: set email slot
#  steps:
#  - intent: inform_email
#  - action: action_default_ask_affirmation

# Rule to activate email form
# - rule: Activate email form
#  steps:
#  - intent: inform_yes
#  - action: email_form
#  - active_loop: email_form

# Deactivate email form
#- rule: Submit form
#  condition:
#  - active_loop: email_form
#  steps:
#  - action: email_form
#  - active_loop: null
#  - slot_was_set:
#    - requested_slot: null
  # The actions we want to run when the form is submitted.
#  - action: action_email
#  - action: utter_thanks_for_talking
#  - action: utter_goodbye

#- rule: Single stage fallback | call default fallback if user is not ok
#  steps:
#  - action: action_default_ask_affirmation
#  - intent: out_of_scope
#  - action: action_default_fallback


# - rule: Implementation of the Two-Stage-Fallback
#   steps:
#   - intent: nlu_fallback
#   - action: action_two_stage_fallback
#   - active_loop: action_two_stage_fallback
